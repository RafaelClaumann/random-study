name: Check Open PRS 2.0 Evoluido

on:
  push:
    branches:
      - teste/**

jobs:
  CheckPR:
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.pr_existence.outputs.PR_EXISTS }}    
    steps:
      - name: Check pull request existence
        id: pr_existence
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |      
            echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
            echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
            
            PRS=$(
                  gh pr list \
                    --repo $GITHUB_REPOSITORY \
                    --json baseRefName,headRefName \
                    --jq "map(select(.baseRefName == \"main\" and .headRefName == \"$GITHUB_REF_NAME\")) | length"
                )

            echo "PRS entre $GITHUB_REF_NAME -> main: $PRS"
            
            echo "PR_EXISTS=false" >> "$GITHUB_OUTPUT"
            echo ${{ steps.pr_existence.outputs.PR_EXISTS }}
            if [[ $PRS > 0 ]]; then
                echo "ja existe um PR aberto entre $GITHUB_REF_NAME -> main"
                echo "PR_EXISTS=true" >> "$GITHUB_OUTPUT"
                echo ${{ steps.pr_existence.outputs.PR_EXISTS }}
            fi
  CreatePR:
    needs: CheckPR
    if: ${{ needs.CheckPR.outputs.output1 == 'false' }}
    runs-on: ubuntu-latest
    steps:      
      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            echo "${{ needs.CheckPR.outputs.output1 }}"

            echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
            echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          
            readonly MAIN=$(gh api repos/$GITHUB_REPOSITORY/branches/main | jq -r .commit.sha)
            readonly FEATURE=$(gh api repos/$GITHUB_REPOSITORY/branches/$GITHUB_REF_NAME | jq -r .commit.sha)

            echo "main sha1: $MAIN"
            echo "$GITHUB_REF_NAME sha1: $FEATURE"

            if [[ $MAIN != $FEATURE ]]; then          
              gh pr create \
                --repo $GITHUB_REPOSITORY \
                --base main \
                --head $GITHUB_REF_NAME \
                --title "Merge $GITHUB_REF_NAME into main" \
                --assignee $GITHUB_REPOSITORY_OWNER \
                --body "Created by Github action"
              
              echo "create PR: $GITHUB_REF_NAME -> main"
              gh pr view $GITHUB_REF_NAME \
                --repo $GITHUB_REPOSITORY \
                --json title,url,changedFiles,state,createdAt,author,assignees              
            fi
