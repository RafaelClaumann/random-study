name: Check Open PRS 2.0 Evoluido

on:
  push:
    branches:
      - teste/**

jobs:
  CheckPR:
    runs-on: ubuntu-latest
    outputs:
      is_pr_present: ${{ steps.pr_existence.outputs.PR_EXISTS }}
    steps:
      - name: Check pull request existence
        id: pr_existence
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          
          PRS=$(
              gh pr list \
                --repo $GITHUB_REPOSITORY \
                --json baseRefName,headRefName \
                --jq "map(select(.baseRefName == \"main\" and .headRefName == \"$GITHUB_REF_NAME\")) | length"
          )
          
          echo "Pull Requests: $GITHUB_REF_NAME -> main: $PRS"
          echo "PR_EXISTS=false" >> "$GITHUB_OUTPUT"
          if [[ $PRS > 0 ]]; then
              echo "there is already one Pull Request: $GITHUB_REF_NAME -> main"
              echo "PR_EXISTS=true" >> "$GITHUB_OUTPUT"
          fi
          
          echo "exists Pull Request? ${{ steps.pr_existence.outputs.PR_EXISTS }}"

  CreatePR:
    needs: CheckPR
    if: ${{ needs.CheckPR.outputs.is_pr_present == 'false' }}
    runs-on: ubuntu-latest
    steps:
      - name: Create pull request
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "exists Pull Request? ${{ needs.CheckPR.outputs.is_pr_present }}"
          
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          
          readonly MAIN_BRANCH_SHA1=$(gh api repos/$GITHUB_REPOSITORY/branches/main | jq -r .commit.sha)
          readonly CURRENT_BRANCH_SHA1=$(gh api repos/$GITHUB_REPOSITORY/branches/$GITHUB_REF_NAME | jq -r .commit.sha)
          
          echo "main branch last commit sha1: $MAIN_BRANCH_SHA1"
          echo "$GITHUB_REF_NAME last commit sha1: $CURRENT_BRANCH_SHA1"
          
          if [[ $MAIN_BRANCH_SHA1 != $CURRENT_BRANCH_SHA1 ]]; then
            gh pr create \
              --repo $GITHUB_REPOSITORY \
              --base main \
              --head $GITHUB_REF_NAME \
              --title "Merge $GITHUB_REF_NAME into main" \
              --assignee $GITHUB_REPOSITORY_OWNER \
              --body "Created by Github action"
          
              echo
              echo "create Pull Request: $GITHUB_REF_NAME -> main"
              gh pr view $GITHUB_REF_NAME \
                --repo $GITHUB_REPOSITORY \
                --json title,url,changedFiles,state,createdAt,author,assignees             
          fi
